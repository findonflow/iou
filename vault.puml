@startuml
!theme bluegray


actor Bob
actor Alice
actor Dapper

file tx [
    tx.cdc
]

database FTReceiver

frame event [
    A.xx.IOU.IOUCreated
    ---
    uuid: UInt64
    from: Address
    to: Address
    type: Type
    amount: UFix64
    validUntil: UFix64
    ---
    from: Alice
    to: Bob
    type: A.xx.FlowUtilityToken.Vault
    amount:100
    validUntil: now+7days
]


card Vault [
        <b>A.xx.FlowUtilityCoin.Vault
        ---
        type: FlowUtilityCoin
        amount:100
    ]


agent IOU [
    <b>A.xx.IOU.Vault
    ---
    let receiver: Cap<&{FT.Receiver}>
    var amount: UFix64
    let type: Type
    let sender:Address
    ---
    sender: Alice
    receiver: Bob Cap
    amount: 100
    type: A.xx.FlowUtilityCoin
    validUntil: now+7days
]

agent Proxy [
    <b>A.xx.IOU.Proxy
    ---
    createVault()
]

Proxy --> IOU: create
IOU --> event: emit

tx --> Vault : 1. withdraw a vault from Dapper
tx --> FTReceiver: 2. borrow receiver
tx -right-> Proxy : 3. borrow users proxy capability and create IOU

Bob -up-> FTReceiver: owns
Dapper -up-> Vault: owns
Alice --> Proxy: owns



@enduml
